// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResourceManager.Infrastructure.Database;

#nullable disable

namespace ResourceManager.Infrastructure.Migrations
{
    [DbContext(typeof(ResourceDbContext))]
    partial class ResourceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResourceManager.Domain.Resources.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsWithdrawn")
                        .HasColumnType("boolean")
                        .HasColumnName("is_withdrawn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("pk_resources");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_resources_id");

                    b.ToTable("resources", "public");
                });

            modelBuilder.Entity("ResourceManager.Domain.Resources.Resource", b =>
                {
                    b.OwnsMany("ResourceManager.Domain.Resources.Lock", "_locks", b1 =>
                        {
                            b1.Property<Guid>("resource_id")
                                .HasColumnType("uuid")
                                .HasColumnName("resource_id");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<bool>("IsValid")
                                .HasColumnType("boolean")
                                .HasColumnName("is_valid");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("username");

                            b1.Property<DateTimeOffset>("ValidTo")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("valid_to");

                            b1.HasKey("resource_id", "Id")
                                .HasName("pk_locks");

                            b1.HasIndex("Id")
                                .HasDatabaseName("ix_locks_id");

                            b1.ToTable("locks", "public");

                            b1.WithOwner()
                                .HasForeignKey("resource_id")
                                .HasConstraintName("fk_locks_resources_resource_id");
                        });

                    b.Navigation("_locks");
                });
#pragma warning restore 612, 618
        }
    }
}
